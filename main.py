import streamlit as st
from utils.logging_config import setup_logging
from utils.database import init_db, load_dataframe, save_dataframe
from utils.data_loader import load_test_data, get_file_uploader
from utils.state_manager import initialize_session_state, save_current_state
from utils.tab_handlers import (
    show_overview_tab, show_analysis_tab, show_visualization_tab,
    show_preprocessing_tab, show_export_tab, show_database_tab, show_reports_tab
)

logger = setup_logging()

def main():
    st.set_page_config(
        page_title="–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö",
        page_icon="üìä",
        layout="wide"
    )

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    initialize_session_state()
    if not init_db():
        st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
        return

    st.title("üìä –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö")
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î
    if st.session_state['df'] is None:
        df = load_dataframe()
        if df is not None:
            st.session_state['df'] = df
            st.success("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    
    # –°–µ–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    st.subheader("–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö")
    
    if st.button("üì• –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"):
        test_df = load_test_data()
        if test_df is not None:
            st.session_state['df'] = test_df
            save_current_state()
            
    uploaded_df = get_file_uploader()
    if uploaded_df is not None:
        st.session_state['df'] = uploaded_df
        if save_dataframe(uploaded_df, source='file_upload'):
            st.success("‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
            save_current_state()
    
    # –†–∞–±–æ—Ç–∞ —Å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    if st.session_state['df'] is not None:
        df = st.session_state['df']
        
        # –ù–∞–≤–∏–≥–∞—Ü–∏—è
        tab_names = ["–û–±–∑–æ—Ä", "–ê–Ω–∞–ª–∏–∑", "–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è", "–ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞", 
                    "–≠–∫—Å–ø–æ—Ä—Ç", "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö", "–û—Ç—á–µ—Ç—ã"]
        
        with st.sidebar:
            st.session_state.active_tab = st.radio(
                "–ù–∞–≤–∏–≥–∞—Ü–∏—è",
                tab_names,
                index=tab_names.index(st.session_state.active_tab)
            )

        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
        tab_handlers = {
            "–û–±–∑–æ—Ä": show_overview_tab,
            "–ê–Ω–∞–ª–∏–∑": show_analysis_tab,
            "–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è": show_visualization_tab,
            "–ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞": show_preprocessing_tab,
            "–≠–∫—Å–ø–æ—Ä—Ç": show_export_tab,
            "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö": show_database_tab,
            "–û—Ç—á–µ—Ç—ã": show_reports_tab
        }
        
        if handler := tab_handlers.get(st.session_state.active_tab):
            handler(df)

if __name__ == "__main__":
    main()
