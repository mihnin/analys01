import streamlit as st
from utils.logging_config import setup_logging
from utils.data_loader import load_test_data, get_file_uploader
from utils.state_manager import initialize_session_state, save_current_state
from utils.tab_handlers import (
    show_overview_tab, show_analysis_tab, show_visualization_tab,
    show_preprocessing_tab, show_export_tab, show_reports_tab
)
from utils.report_generator import generate_data_report

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
TAB_NAMES = ["–û–±–∑–æ—Ä", "–ê–Ω–∞–ª–∏–∑", "–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è", "–ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞",
             "–≠–∫—Å–ø–æ—Ä—Ç", "–û—Ç—á–µ—Ç—ã"]
TAB_HANDLERS = {
    "–û–±–∑–æ—Ä": show_overview_tab,
    "–ê–Ω–∞–ª–∏–∑": show_analysis_tab,
    "–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è": show_visualization_tab,
    "–ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞": show_preprocessing_tab,
    "–≠–∫—Å–ø–æ—Ä—Ç": show_export_tab,
    "–û—Ç—á–µ—Ç—ã": show_reports_tab
}

logger = setup_logging()

def is_valid_dataframe(df):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞"""
    return df is not None and not df.empty

def load_data_section():
    """–°–µ–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö"""
    st.subheader("–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö")
    
    if st.button("üì• –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"):
        test_df = load_test_data()
        if is_valid_dataframe(test_df):
            st.session_state['df'] = test_df
            save_current_state()
                
    uploaded_df = get_file_uploader()
    if is_valid_dataframe(uploaded_df):
        st.session_state['df'] = uploaded_df
        save_current_state()
        st.success("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")

def show_navigation_and_content(df):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
    with st.sidebar:
        st.session_state.active_tab = st.radio(
            "–ù–∞–≤–∏–≥–∞—Ü–∏—è",
            TAB_NAMES,
            index=TAB_NAMES.index(st.session_state.active_tab)
        )

    handler = TAB_HANDLERS.get(st.session_state.active_tab)
    if handler:
        try:
            handler(df)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ {st.session_state.active_tab}: {str(e)}")
            st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ {st.session_state.active_tab}")

def main():
    st.set_page_config(
        page_title="–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö",
        page_icon="üìä",
        layout="wide"
    )

    try:
        initialize_session_state()
        
        st.title("üìä –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö")
        
        load_data_section()
        
        if is_valid_dataframe(st.session_state['df']):
            show_navigation_and_content(st.session_state['df'])
            
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏: {str(e)}")
        st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏: {str(e)}")

if __name__ == "__main__":
    main()
